{"version":3,"sources":["context/index.js","hooks/useLocalStorage.js","components/TodoCounter.js","components/TodoSearch.js","components/TodoList.js","components/TodoItem.js","shared/modal/Modal.js","components/CreateButtom.js","models/tasks.js","components/TodoForm.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","searchTasks","useState","searchValue","setSearchValue","openModal","setOpenModal","nameItem","initValue","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","localStorageItem","localStorage","getItem","JSON","parse","stringify","err","console","saveItem","itemName","newItem","useLocalStorage","tasks","saveTasks","total","length","totalTasksCompleted","filter","t","complete","cloneTasks","text","toUpperCase","includes","Provider","value","changeCompleteTask","index","delTask","splice","addTask","task","push","children","TodoCounter","Consumer","className","TodoSearch","useContext","id","onChange","event","target","placeholder","autoFocus","TodoList","TodoItem","role","onClick","Modal","title","ReactDOM","createPortal","type","document","getElementById","CreateButtom","Task","this","Date","valueOf","trim","TodoFormCreate","valueTask","onSubmit","preventDefault","Swal","fire","AppUI","map","App","render"],"mappings":"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","file":"static/js/main.816b5063.chunk.js","sourcesContent":["import React from \"react\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\n\n\nconst TodoContext = React.createContext()\n\nfunction TodoProvider(props){ \n\n    let searchTasks = []\n    const [searchValue, setSearchValue] = React.useState(\"\")\n    const [openModal, setOpenModal] = React.useState(false)\n\n    const { item: tasks,\n            saveItem: saveTasks,\n            loading, \n            error\n            } = useLocalStorage(\"tasks\", [])\n    const total = tasks.length\n    const totalTasksCompleted = tasks.filter( t =>  t.complete).length\n    let cloneTasks = [...tasks]; \n    \n    // search\n    searchTasks = tasks.filter(t => t.text.toUpperCase()\n                                    .includes(searchValue.toUpperCase()))\n    \n    \n    const changeCompleteTask = (index) => {\n        cloneTasks = [...tasks]; // clone tasks\n        cloneTasks[index].complete  = !tasks[index].complete\n        saveTasks(\"tasks\", cloneTasks)\n    }\n    \n    const delTask = (index) => {\n        cloneTasks = [...tasks]; // clone tasks\n        cloneTasks.splice(index, 1);\n        saveTasks(\"tasks\", cloneTasks)\n    }\n\n    const addTask = (task) => {\n        cloneTasks.push(task)\n        saveTasks(\"tasks\", cloneTasks)\n    }\n    return (\n        <TodoContext.Provider value={{\n           setSearchValue,\n           loading,\n           error,\n           searchTasks,\n           total,\n           totalTasksCompleted,\n           changeCompleteTask,\n           delTask, \n           openModal,\n           setOpenModal,\n           addTask\n        }}>\n\n        {props.children}\n            \n        </TodoContext.Provider>\n    )\n    \n          \n}\n\nexport {TodoContext, TodoProvider};","import React from 'react';\n\n\n\nfunction useLocalStorage(nameItem, initValue){\n\n    const [error, setError] = React.useState(false)\n    const [loading, setLoading] = React.useState(true)\n    const [item, setItem] = React.useState(initValue)\n    \n    // React.useEffect,  excute code just before render the App\n    React.useEffect( () => {\n      setTimeout(() => {\n        let localStorageItem = localStorage.getItem(nameItem)\n        try {\n          // local storage validate\n          if (localStorageItem){\n            localStorageItem = JSON.parse(localStorageItem)\n    \n        } else {\n          localStorage.setItem(nameItem, JSON.stringify(initValue))\n          localStorageItem = []\n        }\n        setItem(localStorageItem)\n        \n      } catch (err) {\n        console.error(err)\n        setError(true)\n      }\n      setLoading(false)\n        \n      }, 2000);\n    }, [])\n  \n    // save\n    const saveItem = (itemName, newItem) => {\n      localStorage.setItem(itemName, JSON.stringify(newItem))\n      setItem(newItem)\n    }\n    \n  \n    return {\n      item,\n      saveItem,\n      loading,\n      error\n    }\n  }\n\n  export {useLocalStorage}","import React from \"react\";\nimport {TodoContext} from \"../context\"\n\nfunction TodoCounter(){\n    return (\n        <TodoContext.Consumer>\n            {({totalTasksCompleted, total}) => (\n                <h1 className=\"text-center\">What's Up you've complete {totalTasksCompleted} of {total} tasks</h1>\n\n            )}\n        </TodoContext.Consumer>\n    )\n}\n\n\nexport {TodoCounter}","import React from \"react\";\n\nimport {TodoContext} from \"../context\"\n\nfunction TodoSearch() {\n\n    const {searchValue, setSearchValue} = React.useContext(TodoContext)\n\n    const search = (event) => {\n        setSearchValue(event.target.value)\n    }\n\n    return (\n           \n        <form id=\"form\" className=\"form\">\n            <input className=\"form-control\"\n                value={searchValue}\n                onChange={search}\n                placeholder=\"Buscar tarea\"\n                autoFocus />\n        </form>\n            \n\n    )\n}\n\n\nexport { TodoSearch }","import React from \"react\";\n\nfunction TodoList(props){\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n\n\nexport {TodoList}","import React from \"react\";\n\nfunction TodoItem({task, changeCompleteTask, delTask}){\n\n    let {complete, text} = task\n\n    return (\n        <>        \n            <div className={`alert alert-warning mt-3 ${complete && 'alert-dark'} justify-content-between align-items-center d-flex`} role=\"alert\">\n                <p className={`${complete && 'line-through'}`}>{text}</p>\n                <h3 className=\"m-0\">\n                    <i className={`fas fa-check-circle ${complete && 'fa-undo-alt'} \n                                  text-success m-1`} \n                       role=\"button\" \n                       onClick={changeCompleteTask}>\n                     </i>\n                    <i className=\"fas fa-minus-circle text-danger\"  \n                       role=\"button\"\n                       onClick={delTask}>\n\n                    </i>\n                </h3>\n            </div>\n        </>\n       \n    )\n}\n\n\nexport {TodoItem}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoContext } from '../../context';\nimport './Modal.css';\n\nfunction Modal({ children, title }) {\n\n  const {setOpenModal} = React.useContext(TodoContext)\n  // ReactDOM.createPortal, pass data another component HTML, in this case \"#modal\"\n  return ReactDOM.createPortal(\n    <div className=\"ModalBackground\">\n      <div className='card'>\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"text-dark\" id=\"exampleModalLongTitle\"> {title} </h5>\n            <button type=\"button\" onClick={ () => setOpenModal(false)}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">  \n            {/* content */}\n            {children}\n          </div>\n        </div>\n        \n\n      </div>\n    </div>,\n    document.getElementById('modal')\n  );\n}\n\nexport { Modal };","import React from \"react\";\n\nfunction CreateButtom({setOpenModal}){\n\n    const createTask = () => {\n        setOpenModal(true)\n    }\n    return (\n\n        <button className=\"btn btn-primary w-100 mt-2\" \n                data-toggle=\"modal\" \n                data-target=\"#createModal\"\n                type=\"buttom\" \n                onClick={() => createTask()}\n                id=\"sub_tareas\">Crear tarea\n        </button>\n        )\n}\n\nexport {CreateButtom}","\n\nclass Task{\n\n    constructor(text, complete = false){\n        this.id = new Date().valueOf();\n        this.text = text.trim()\n        this.complete = complete\n\n    }\n}\n\n\nexport {Task};","import React from \"react\"\n\nimport { TodoContext } from \"../context\"\nimport { Task } from \"../models/tasks\"\nimport Swal from 'sweetalert2'\n\n\n\nfunction TodoFormCreate() {\n\n    const {addTask, setOpenModal} = React.useContext(TodoContext)\n    let valueTask = ''\n\n\n    const onSubmit = (event) => {\n        // preventDefault, not refresh page \n        event.preventDefault()\n        const task = new Task(valueTask)\n        addTask(task)    \n        setOpenModal(false)\n        Swal.fire(\n             '',\n            'Save successfully!',\n            'success'\n          )\n    \n    }\n    return (\n        <form onSubmit={onSubmit}>\n            <textarea type=\"text\" \n                      onChange={event => valueTask=event.target.value}\n                      className=\"form-control\" \n                      placeholder='Description task'/>\n\n            <div className=\"d-flex justify-content-end\">\n                <button type=\"submit\" className=\"btn btn-success mt-3\">Save changes</button>\n                \n            </div>\n            \n        </form>\n    )\n    \n}\n\nexport {TodoFormCreate}","import React from 'react';\n\nimport { TodoCounter } from '../components/TodoCounter';\nimport { TodoContext } from '../context';\nimport { TodoSearch } from '../components/TodoSearch';\nimport { TodoList } from '../components/TodoList';\nimport { TodoItem } from '../components/TodoItem';\nimport { Modal } from '../shared/modal/Modal'\nimport { CreateButtom } from '../components/CreateButtom';\nimport {TodoFormCreate} from '../components/TodoForm'\n\nfunction AppUI() {\n\n  const { loading,\n    error,\n    total,\n    searchTasks,\n    changeCompleteTask,\n    delTask,\n    openModal,\n    setOpenModal\n  } = React.useContext(TodoContext)\n\n  return (\n    <>\n      <article className=\"card\">\n        <TodoCounter />\n        <TodoSearch />\n\n        <TodoList>\n\n          {loading &&\n            <div className='text-center'>\n              <div className=\"lds-dual-ring mt-4\"></div>\n            </div>\n          }\n\n          {error &&\n            <div className=\"alert alert-danger mt-4\" role=\"alert\">\n              Upsss... hubo un al cargar las tareas!\n            </div>\n          }\n\n          {(!loading && !error && total === 0) &&\n            <div className=\"alert alert-info mt-4\" role=\"alert\">\n              Crea una tarea :)\n            </div>\n          }\n\n          {\n            searchTasks.map((task, index) => (\n              <TodoItem key={task.id} task={task}\n                changeCompleteTask={() => changeCompleteTask(index)}\n                delTask={() => delTask(index)} />\n            ))\n          }\n        </TodoList>\n      \n        <CreateButtom \n        setOpenModal={setOpenModal}\n        />\n\n      </article>\n      { openModal &&\n        <Modal title=\"Create Task\">\n            <TodoFormCreate/>\n        </Modal>\n      }\n    </>\n\n  )\n\n}\n\n\nexport { AppUI }","\n// React\nimport React from 'react';\nimport { TodoProvider } from '../context';\n// css\nimport './App.css';\n// Components\nimport { AppUI } from '../App/AppUI';\n\n\nfunction App(props) {\n  \n  return (\n    <TodoProvider>\n      <AppUI/>\n    </TodoProvider>\n    \n  )\n\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}